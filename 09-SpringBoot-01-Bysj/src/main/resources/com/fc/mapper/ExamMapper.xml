<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.ExamMapper">
  <resultMap id="BaseResultMap" type="com.fc.entity.Exam">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="exam" jdbcType="VARCHAR" property="exam" />
    <result column="Subjectid" jdbcType="INTEGER" property="subjectid" />
    <result column="Studentid" jdbcType="INTEGER" property="studentid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, exam, Subjectid, Studentid, remark
  </sql>
  <select id="selectByExample" parameterType="com.fc.entity.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.entity.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.entity.Exam">
    insert into exam (ID, exam, Subjectid, 
      Studentid, remark)
    values (#{id,jdbcType=INTEGER}, #{exam,jdbcType=VARCHAR}, #{subjectid,jdbcType=INTEGER}, 
      #{studentid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fc.entity.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="exam != null">
        exam,
      </if>
      <if test="subjectid != null">
        Subjectid,
      </if>
      <if test="studentid != null">
        Studentid,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="exam != null">
        #{exam,jdbcType=VARCHAR},
      </if>
      <if test="subjectid != null">
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.entity.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.exam != null">
        exam = #{record.exam,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectid != null">
        Subjectid = #{record.subjectid,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null">
        Studentid = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set ID = #{record.id,jdbcType=INTEGER},
      exam = #{record.exam,jdbcType=VARCHAR},
      Subjectid = #{record.subjectid,jdbcType=INTEGER},
      Studentid = #{record.studentid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fc.entity.Exam">
    update exam
    <set>
      <if test="exam != null">
        exam = #{exam,jdbcType=VARCHAR},
      </if>
      <if test="subjectid != null">
        Subjectid = #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        Studentid = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fc.entity.Exam">
    update exam
    set exam = #{exam,jdbcType=VARCHAR},
      Subjectid = #{subjectid,jdbcType=INTEGER},
      Studentid = #{studentid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.fc.entity.Exam">
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="cno" jdbcType="INTEGER" property="cno" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
    <result column="singlenumber" jdbcType="INTEGER" property="singlenumber" />
    <result column="singlecore" jdbcType="INTEGER" property="singlecore" />
    <result column="multiplenumber" jdbcType="INTEGER" property="multiplenumber" />
    <result column="multiplecore" jdbcType="INTEGER" property="multiplecore" />
    <result column="examdate" jdbcType="DATE" property="examdate" />
    <result column="examtime" jdbcType="DATE" property="examtime" />
    <result column="testtime" jdbcType="INTEGER" property="testtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eid, pname, cno, userid, classid, singlenumber, singlecore, multiplenumber, multiplecore, 
    examdate, examtime, testtime
  </sql>
  <select id="selectByExample" parameterType="com.fc.entity.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fc.entity.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.entity.Exam">
    insert into exam (eid, pname, cno, 
      userid, classid, singlenumber, 
      singlecore, multiplenumber, multiplecore, 
      examdate, examtime, testtime
      )
    values (#{eid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{cno,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, #{singlenumber,jdbcType=INTEGER}, 
      #{singlecore,jdbcType=INTEGER}, #{multiplenumber,jdbcType=INTEGER}, #{multiplecore,jdbcType=INTEGER}, 
      #{examdate,jdbcType=DATE}, #{examtime,jdbcType=DATE}, #{testtime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fc.entity.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="cno != null">
        cno,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="singlenumber != null">
        singlenumber,
      </if>
      <if test="singlecore != null">
        singlecore,
      </if>
      <if test="multiplenumber != null">
        multiplenumber,
      </if>
      <if test="multiplecore != null">
        multiplecore,
      </if>
      <if test="examdate != null">
        examdate,
      </if>
      <if test="examtime != null">
        examtime,
      </if>
      <if test="testtime != null">
        testtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="cno != null">
        #{cno,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="singlenumber != null">
        #{singlenumber,jdbcType=INTEGER},
      </if>
      <if test="singlecore != null">
        #{singlecore,jdbcType=INTEGER},
      </if>
      <if test="multiplenumber != null">
        #{multiplenumber,jdbcType=INTEGER},
      </if>
      <if test="multiplecore != null">
        #{multiplecore,jdbcType=INTEGER},
      </if>
      <if test="examdate != null">
        #{examdate,jdbcType=DATE},
      </if>
      <if test="examtime != null">
        #{examtime,jdbcType=DATE},
      </if>
      <if test="testtime != null">
        #{testtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.entity.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.cno != null">
        cno = #{record.cno,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null">
        classid = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.singlenumber != null">
        singlenumber = #{record.singlenumber,jdbcType=INTEGER},
      </if>
      <if test="record.singlecore != null">
        singlecore = #{record.singlecore,jdbcType=INTEGER},
      </if>
      <if test="record.multiplenumber != null">
        multiplenumber = #{record.multiplenumber,jdbcType=INTEGER},
      </if>
      <if test="record.multiplecore != null">
        multiplecore = #{record.multiplecore,jdbcType=INTEGER},
      </if>
      <if test="record.examdate != null">
        examdate = #{record.examdate,jdbcType=DATE},
      </if>
      <if test="record.examtime != null">
        examtime = #{record.examtime,jdbcType=DATE},
      </if>
      <if test="record.testtime != null">
        testtime = #{record.testtime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set eid = #{record.eid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      cno = #{record.cno,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      classid = #{record.classid,jdbcType=INTEGER},
      singlenumber = #{record.singlenumber,jdbcType=INTEGER},
      singlecore = #{record.singlecore,jdbcType=INTEGER},
      multiplenumber = #{record.multiplenumber,jdbcType=INTEGER},
      multiplecore = #{record.multiplecore,jdbcType=INTEGER},
      examdate = #{record.examdate,jdbcType=DATE},
      examtime = #{record.examtime,jdbcType=DATE},
      testtime = #{record.testtime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>